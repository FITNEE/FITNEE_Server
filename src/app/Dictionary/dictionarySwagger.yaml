tags:
  name: Dictionary
  description: 운동사전 관련 API - 류재혁

/app/dictionary:
  get:
    summary: API NO.1 - userIdx 받아서 최근 검색키워드, 인기 검색 키워드 조회 API
    parameters:
      - name: userIdx
        in: query
        required: true
        description: userIdx를 입력하세요.
        schema:
          type: integer
    description: userIdx를 받아서 최근 검색키워드 5개, 인기 검색 키워드 5개를 반환합니다.
    tags:
      - Dictionary
    responses:
      '1000':
        description: 성공
        content:
          application/json:
            schema:
              type: object
              properties:
                recentKeywords:
                  type: array
                  items:
                    type: string
                    description: 최근 검색 키워드
                popularKeywords:
                  type: array
                  items:
                    type: string
                    description: 인기 검색 키워드
      '2012':
        description: userIdx를 입력해 주세요



/app/dictionary/usersearch:
  post:
    summary: API NO.2 - 유저 검색기록 db에 저장 API
    description: isSuccess true면 db에 잘 저장된것. 아래 resut의 insertId는 keywordIdx.
    tags:
      - Dictionary
    operationId: postSearchList
    parameters:
      - name: search
        in: query
        required: true
        description: 저장할 검색 내용
        schema:
          type: string
    responses:
      '1000':
        description: 성공
      '2012':
        description: 토큰값(userId)를 확인해 주세요.
      '606':
        description: 검색내용을 입력해 주세요.


/app/dictionary/searchexercise:
  post:
    summary: API NO.3 - 검색 단어와 연관된 운동 반환 API
    description: search에 사 단어 넣으면 search 단어 들어간 모든 운동 return
    tags:
      - Dictionary
    operationId: postSearchName
    parameters:
      - name: search
        in: query
        required: true
        description: 검색 내용
        schema:
          type: string
    responses:
      '1000':
        description: 성공
      '606':
        description: 검색내용을 입력해 주세요.


/app/dictionary/exerciseinfo:
  get:
    summary: API NO.4 - 운동 parts 받아서 운동 정보 조회 API
    parameters:
      - name: parts
        in: query
        required: true
        description: 운동 parts를 입력하세요.
        schema:
          type: string
    description: 운동 parts 받아서 그 parts에 포함된 모든 운동 정보(name, muscle, equipment, time, calorie) 조회
    tags:
      - Dictionary
    responses:
      '1000':
        description: 성공
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    description: 운동 이름
                  muscle:
                    type: string
                    description: 작용 근육
                  equipment:
                    type: string
                    description: 사용하는 장비
                  time:
                    type: string
                    description: 소요 시간
                  calorie:
                    type: string
                    description: 소모 칼로리
      '601':
        description: 운동부위를 입력해 주세요


/app/dictionary/exercisemethod:
  get:
    summary: API NO.5 - 운동 name으로 운동방법, 운동주의사항 조회 API
    parameters:
      - name: name
        in: query
        required: true
        description: 운동 name을 입력하세요.
        schema:
          type: string
    description: 운동 name을 받아서 운동방법과 운동주의사항을 반환합니다.
    tags:
      - Dictionary
    responses:
      '1000':
        description: 성공
        content:
          application/json:
            schema:
              type: object
              properties:
                exerciseMethod:
                  type: string
                  description: 운동방법
                exercisePrecaution:
                  type: string
                  description: 운동주의사항
      '602':
        description: 운동종목을 입력해 주세요


/app/dictionary/exercisechat:
  get:
    summary: API NO.6 - 운동 name으로 채팅내역 조회 API
    parameters:
      - name: name
        in: query
        required: true
        description: 운동 name을 입력하세요.
        schema:
          type: string
    description: 운동 name을 받아서 댓글내용(userIdx, userNickname, text, status(댓글 삭제, 수정 여부(0기존, 1삭제, 2수정) / 댓글 수를 반환합니다.
    tags:
      - Dictionary
    responses:
      '1000':
        description: 성공
        content:
          application/json:
            schema:
              type: object
              properties:
                chatCount:
                  type: integer
                  description: 댓글 수
                comments:
                  type: array
                  items:
                    type: object
                    properties:
                      userIdx:
                        type: integer
                        description: 사용자 인덱스
                      userNickname:
                        type: string
                        description: 사용자 닉네임
                      text:
                        type: string
                        description: 댓글 내용
                      status:
                        type: integer
                        description: 댓글 삭제, 수정 여부(0기존, 1삭제, 2수정)
      '602':
        description: 운동종목을 입력해 주세요


/app/dictionary/chatting:
  post:
    summary: API NO.7 - 운동 name, userNickname, text post API
    description: 운동 name, userNickname, text post해서 db에 넣기
    tags:
      - Dictionary
    operationId: postChatting

    requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                userNickname:
                  type: string
                text:
                  type: string

              required:
                - name
                - userNickname
                - text
    responses:
      '1000':
        description: 성공
      '602':
        description: 운동종목을 입력해 주세요
      '603':
        description: 유저 닉네임을 입력해 주세요
      '604':
        description: 댓글내용을 입력해 주세요  
      '4000':
        description: DB error   


/app/dictionary/deleteChatt/{healthChattingIdx}:
  patch:
    summary: API NO.8 - 채팅 삭제 API (healthChatting status 컬럼 0 -> 1)
    description: login할때 쿠키에 저장된 accesstoken가지고 있어야함.(api 내에서 검증함) app/dictionary/exercisechat에서 get한 healthChattingIdx params로 받아야함..
    tags:
      - Dictionary
    operationId: deleteChatt
    parameters:
      - name: healthChattingIdx
        in: path
        required: true
        description: 채팅의 healthChattingIdx를 입력하세요.
        schema:
          type: integer

    responses:
      '1000':
        description: 채팅 삭제 성공(healthChatting status 컬럼 0 -> 1)
      '605':
        description: /app/dictionary/exercisechat에서 get한 healthChattingIdx를 입력해 주세요.


/app/dictionary/chatRead:
  put:
    summary: "API NO.9 - 채팅 어디까지 읽었는지 update하는 API"
    description: "현재 채팅방의 가장 마지막 채팅의 healthChattingIdx 벗어나지 않도록 테이블에 저장"
    tags:
      - Dictionary
    parameters:
      - in: header
        name: Authorization
        description: Access token obtained from user authentication
        required: true
        schema:
          type: string
      - in: query
        name: healthChattingIdx
        description: "지금 있는 채팅방의 마지막 채팅의 healthChattingIdx (API No.6에서 확인 가능)"
        required: true
        schema:
          type: integer
    responses:
      '1000':
        description: "성공"
        content:
          application/json:
            example:
              code: 1000
              message: "요청이 성공적으로 처리되었습니다."
              data: {}
      '607':
        description: "현재 채팅방의 가장 마지막 채팅의 healthChattingIdx를 입력해 주세요."
        content:
          application/json:
            example:
              code: 607
              message: "현재 채팅방의 가장 마지막 채팅의 healthChattingIdx를 입력해 주세요."
              data: {}


/app/dictionary/readInfo:
  get:
    summary: "API NO.10 - 안읽은 채팅이 있다면 1(true), 모든 채팅을 다 읽었다면 0(false)를 반환하는 API"
    description: "healthName을 받아서 안읽은 채팅이 있다면 1(true), 모든 채팅을 다 읽었다면 0(false)를 반환"
    tags:
      - Dictionary
    parameters:
      - in: header
        name: Authorization
        description: Access token obtained from user authentication
        required: true
        schema:
          type: string
      - in: query
        name: name
        description: "운동 이름(healthCategoryName)을 입력하세요."
        required: true
        schema:
          type: string
    responses:
      '1000':
        description: "성공"
        content:
          application/json:
            example:
              code: 1000
              message: "요청이 성공적으로 처리되었습니다."
              data:
                hasUnreadChats: 1
      '602':
        description: "운동종목을 입력해 주세요."
        content:
          application/json:
            example:
              code: 602
              message: "운동종목을 입력해 주세요."
              data: {}
      '2012':
        description: "user 토큰 없음."
        content:
          application/json:
            example:
              code: 2012
              message: "사용자 토큰이 유효하지 않습니다."
              data: {}
